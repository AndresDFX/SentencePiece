#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.2
#  in conjunction with Tcl version 8.6
#    Mar 10, 2020 05:58:22 PM -05  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import sentence_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    sentence_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    sentence_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("556x285+331+137")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(0, 0)
        top.title("Sentence Piece UV")
        top.configure(background="#5b2dd8")
        top.configure(highlightcolor="black")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.0, rely=0.0, relheight=1.011, relwidth=1.007)
        self.Frame1.configure(relief='flat')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(background="#2f04d8")
        self.Frame1.configure(cursor="fleur")

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0.036, rely=0.035, height=31, width=289)
        self.Label1.configure(activebackground="#00edc6")
        self.Label1.configure(activeforeground="#ffffff")
        self.Label1.configure(font="-family {Courier New} -size 10")
        self.Label1.configure(text='''Enter the text you want to tokenize''')

        self.Text1 = tk.Text(self.Frame1)
        self.Text1.place(relx=0.036, rely=0.174, relheight=0.604, relwidth=0.511)

        self.Text1.configure(background="white")
        self.Text1.configure(font="-family {Courier New} -size 10")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(wrap="word")

        self.Model_word = tk.Button(self.Frame1)
        self.Model_word.place(relx=0.036, rely=0.833, height=31, width=108)
        self.Model_word.configure(activebackground="#00edc6")
        self.Model_word.configure(activeforeground="#ffffff")
        self.Model_word.configure(command=sentence_support.modelWord)
        self.Model_word.configure(font="-family {Courier New} -size 10")
        self.Model_word.configure(text='''Model word''')

        self.Button2 = tk.Button(self.Frame1)
        self.Button2.place(relx=0.357, rely=0.833, height=29, width=108)
        self.Button2.configure(activebackground="#00edc6")
        self.Button2.configure(activeforeground="#ffffff")
        self.Button2.configure(command=sentence_support.modelUser)
        self.Button2.configure(font="-family {Courier New} -size 10")
        self.Button2.configure(text='''Model user''')

        self.TSeparator1 = ttk.Separator(self.Frame1)
        self.TSeparator1.place(relx=0.575, rely=0.021, relheight=0.965)
        self.TSeparator1.configure(orient="vertical")

        self.Text2 = tk.Text(self.Frame1)
        self.Text2.place(relx=0.625, rely=0.174, relheight=0.569, relwidth=0.332)

        self.Text2.configure(background="white")
        self.Text2.configure(font="-family {Courier New} -size 10")
        self.Text2.configure(selectbackground="#c4c4c4")
        self.Text2.configure(wrap="word")

        self.Label2 = tk.Label(self.Frame1)
        self.Label2.place(relx=0.732, rely=0.035, height=31, width=79)
        self.Label2.configure(activebackground="#00edc6")
        self.Label2.configure(activeforeground="#ffffff")
        self.Label2.configure(font="-family {Courier New} -size 10")
        self.Label2.configure(text='''Output''')

if __name__ == '__main__':
    vp_start_gui()





